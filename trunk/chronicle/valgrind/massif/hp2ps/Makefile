# Makefile.in generated by automake 1.9.6 from Makefile.am.
# massif/hp2ps/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




srcdir = .
top_srcdir = ../..

pkgdatadir = $(datadir)/valgrind
pkglibdir = $(libdir)/valgrind
pkgincludedir = $(includedir)/valgrind
top_builddir = ../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-suse-linux
host_triplet = i686-suse-linux
DIST_COMMON = README $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(top_srcdir)/Makefile.all.am \
	$(top_srcdir)/Makefile.flags.am INSTALL
val_PROGRAMS = hp2ps$(EXEEXT)
subdir = massif/hp2ps
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(valdir)"
valPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(val_PROGRAMS)
am_hp2ps_OBJECTS = hp2ps-AuxFile.$(OBJEXT) hp2ps-Axes.$(OBJEXT) \
	hp2ps-AreaBelow.$(OBJEXT) hp2ps-Curves.$(OBJEXT) \
	hp2ps-Deviation.$(OBJEXT) hp2ps-Dimensions.$(OBJEXT) \
	hp2ps-Error.$(OBJEXT) hp2ps-HpFile.$(OBJEXT) \
	hp2ps-Key.$(OBJEXT) hp2ps-Main.$(OBJEXT) hp2ps-Marks.$(OBJEXT) \
	hp2ps-TopTwenty.$(OBJEXT) hp2ps-TraceElement.$(OBJEXT) \
	hp2ps-PsFile.$(OBJEXT) hp2ps-Reorder.$(OBJEXT) \
	hp2ps-Scale.$(OBJEXT) hp2ps-Shade.$(OBJEXT) \
	hp2ps-Utilities.$(OBJEXT)
hp2ps_OBJECTS = $(am_hp2ps_OBJECTS)
hp2ps_DEPENDENCIES =
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(hp2ps_SOURCES)
DIST_SOURCES = $(hp2ps_SOURCES)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/roc/shared/chronicle/valgrind/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/roc/shared/chronicle/valgrind/missing --run tar
AUTOCONF = ${SHELL} /home/roc/shared/chronicle/valgrind/missing --run autoconf
AUTOHEADER = ${SHELL} /home/roc/shared/chronicle/valgrind/missing --run autoheader
AUTOMAKE = ${SHELL} /home/roc/shared/chronicle/valgrind/missing --run automake-1.9
AWK = gawk
BUILD_MPIWRAP_FALSE = 
BUILD_MPIWRAP_TRUE = #
CC = gcc
CCAS = gcc
CCASFLAGS = -Wno-long-long
CCDEPMODE = depmode=gcc3
CFLAGS = -Wno-long-long -Wno-pointer-sign -Wdeclaration-after-statement
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFAULT_SUPP = xfree-3.supp xfree-4.supp glibc-2.5.supp 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DISTCHECK_CONFIGURE_FLAGS = --with-vex=$(top_srcdir)/VEX
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FLAG_M32 = -m32
FLAG_M64 = 
FLAG_MMMX = -mmmx
FLAG_MSSE = -msse
FLAG_WDECL_AFTER_STMT = -Wdeclaration-after-statement
GDB = /usr/bin/gdb
GREP = /usr/bin/grep
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAINTAINER_MODE_FALSE = 
MAINTAINER_MODE_TRUE = #
MAKEINFO = ${SHELL} /home/roc/shared/chronicle/valgrind/missing --run makeinfo
MPI_CC = mpicc
OBJEXT = o
PACKAGE = valgrind
PACKAGE_BUGREPORT = valgrind-users@lists.sourceforge.net
PACKAGE_NAME = Valgrind
PACKAGE_STRING = Valgrind 3.2.3
PACKAGE_TARNAME = valgrind
PACKAGE_VERSION = 3.2.3
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PREFERRED_STACK_BOUNDARY = -mpreferred-stack-boundary=2
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VALT_LOAD_ADDRESS = 0x38000000
VERSION = 3.2.3
VEX_DIR = $(top_srcdir)/VEX
VG_AMD64_LINUX_FALSE = 
VG_AMD64_LINUX_TRUE = #
VG_ARCH = x86
VG_ARCH_ALL = amd64 ppc32 ppc64 x86
VG_OS = linux
VG_PLATFORM_PRI = X86_LINUX
VG_PLATFORM_SEC = 
VG_PPC32_LINUX_FALSE = 
VG_PPC32_LINUX_TRUE = #
VG_PPC64_LINUX_FALSE = 
VG_PPC64_LINUX_TRUE = #
VG_X86_LINUX_FALSE = #
VG_X86_LINUX_TRUE = 
XMKMF = 
ac_ct_CC = gcc
ac_ct_CXX = g++
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-suse-linux
build_alias = 
build_cpu = i686
build_os = linux
build_vendor = suse
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-suse-linux
host_alias = 
host_cpu = i686
host_os = linux
host_vendor = suse
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = /home/roc/shared/chronicle/valgrind/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
valdir = $(libdir)/valgrind
inplacedir = $(top_builddir)/.in_place

# Baseline flags for all compilations
AM_CFLAGS_BASE = -O -g -Wmissing-prototypes -Winline -Wall -Wshadow \
                 -Wpointer-arith -Wstrict-prototypes -Wmissing-declarations

AM_CFLAGS_PIC = -fpic -fno-omit-frame-pointer

# Flags for specific targets
AM_FLAG_M3264_X86_LINUX = -m32
AM_CPPFLAGS_X86_LINUX = $(add_includes_x86_linux)
AM_CFLAGS_X86_LINUX = $(WERROR) -m32 -mpreferred-stack-boundary=2 \
			 	$(AM_CFLAGS_BASE)

AM_CCASFLAGS_X86_LINUX = $(add_includes_x86_linux) -m32 -g
AM_FLAG_M3264_AMD64_LINUX = 
AM_CPPFLAGS_AMD64_LINUX = $(add_includes_amd64_linux)
AM_CFLAGS_AMD64_LINUX = $(WERROR)  -fomit-frame-pointer \
				 -mpreferred-stack-boundary=2 $(AM_CFLAGS_BASE)

AM_CCASFLAGS_AMD64_LINUX = $(add_includes_amd64_linux) -m64 -g
AM_FLAG_M3264_PPC32_LINUX = -m32
AM_CPPFLAGS_PPC32_LINUX = $(add_includes_ppc32_linux)
AM_CFLAGS_PPC32_LINUX = $(WERROR) -m32 $(AM_CFLAGS_BASE)
AM_CCASFLAGS_PPC32_LINUX = $(add_includes_ppc32_linux) -Wa,-maltivec -m32 -g
AM_FLAG_M3264_PPC64_LINUX = 
AM_CPPFLAGS_PPC64_LINUX = $(add_includes_ppc64_linux)
AM_CFLAGS_PPC64_LINUX = $(WERROR)  $(AM_CFLAGS_BASE)
AM_CCASFLAGS_PPC64_LINUX = $(add_includes_ppc64_linux) -Wa,-maltivec -m64 -g

# Flags for the primary target.  These must be used to build the
# regtests and performance tests.  In fact, these must be used to
# build anything which is built only once on a dual-arch build.
#
AM_FLAG_M3264_PRI = $(AM_FLAG_M3264_X86_LINUX)
AM_CPPFLAGS_PRI = $(AM_CPPFLAGS_X86_LINUX)
AM_CFLAGS_PRI = $(AM_CFLAGS_X86_LINUX)
AM_CCASFLAGS_PRI = $(AM_CCASFLAGS_X86_LINUX)
AM_CFLAGS = $(WERROR) -Winline -Wall -Wshadow -O -g
EXTRA_DIST = \
    CHANGES \
    INSTALL \
    LICENSE \
    README \
    Makefile.old \
    hp2ps.1

hp2ps_SOURCES = \
	AuxFile.c	\
	Axes.c		\
	AreaBelow.c	\
	Curves.c 	\
	Deviation.c	\
	Dimensions.c	\
	Error.c 	\
	HpFile.c	\
	Key.c		\
	Main.c 		\
	Marks.c		\
	TopTwenty.c	\
	TraceElement.c	\
	PsFile.c 	\
	Reorder.c	\
	Scale.c		\
	Shade.c 	\
	Utilities.c


# Build hp2ps for the primary target only.
hp2ps_LDADD = -lm
hp2ps_CPPFLAGS = $(AM_CPPFLAGS_PRI)
hp2ps_CFLAGS = $(AM_CFLAGS_PRI)
hp2ps_CCASFLAGS = $(AM_CCASFLAGS_PRI)
hp2ps_LDFLAGS = $(AM_CFLAGS_PRI)
noinst_HEADERS = \
       AreaBelow.h \
       AuxFile.h \
       Axes.h \
       Curves.h \
       Defines.h \
       Deviation.h \
       Dimensions.h \
       Error.h \
       HpFile.h \
       Key.h \
       Main.h \
       Marks.h \
       PsFile.h \
       Reorder.h \
       Scale.h \
       Shade.h \
       TopTwenty.h \
       TraceElement.h \
       Utilities.h

all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(top_srcdir)/Makefile.all.am $(top_srcdir)/Makefile.flags.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  massif/hp2ps/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  massif/hp2ps/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-valPROGRAMS: $(val_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(valdir)" || $(mkdir_p) "$(DESTDIR)$(valdir)"
	@list='$(val_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(valPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(valdir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(valPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(valdir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-valPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(val_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(valdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(valdir)/$$f"; \
	done

clean-valPROGRAMS:
	-test -z "$(val_PROGRAMS)" || rm -f $(val_PROGRAMS)
hp2ps$(EXEEXT): $(hp2ps_OBJECTS) $(hp2ps_DEPENDENCIES) 
	@rm -f hp2ps$(EXEEXT)
	$(LINK) $(hp2ps_LDFLAGS) $(hp2ps_OBJECTS) $(hp2ps_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/hp2ps-AreaBelow.Po
include ./$(DEPDIR)/hp2ps-AuxFile.Po
include ./$(DEPDIR)/hp2ps-Axes.Po
include ./$(DEPDIR)/hp2ps-Curves.Po
include ./$(DEPDIR)/hp2ps-Deviation.Po
include ./$(DEPDIR)/hp2ps-Dimensions.Po
include ./$(DEPDIR)/hp2ps-Error.Po
include ./$(DEPDIR)/hp2ps-HpFile.Po
include ./$(DEPDIR)/hp2ps-Key.Po
include ./$(DEPDIR)/hp2ps-Main.Po
include ./$(DEPDIR)/hp2ps-Marks.Po
include ./$(DEPDIR)/hp2ps-PsFile.Po
include ./$(DEPDIR)/hp2ps-Reorder.Po
include ./$(DEPDIR)/hp2ps-Scale.Po
include ./$(DEPDIR)/hp2ps-Shade.Po
include ./$(DEPDIR)/hp2ps-TopTwenty.Po
include ./$(DEPDIR)/hp2ps-TraceElement.Po
include ./$(DEPDIR)/hp2ps-Utilities.Po

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

hp2ps-AuxFile.o: AuxFile.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -MT hp2ps-AuxFile.o -MD -MP -MF "$(DEPDIR)/hp2ps-AuxFile.Tpo" -c -o hp2ps-AuxFile.o `test -f 'AuxFile.c' || echo '$(srcdir)/'`AuxFile.c; \
	then mv -f "$(DEPDIR)/hp2ps-AuxFile.Tpo" "$(DEPDIR)/hp2ps-AuxFile.Po"; else rm -f "$(DEPDIR)/hp2ps-AuxFile.Tpo"; exit 1; fi
#	source='AuxFile.c' object='hp2ps-AuxFile.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -c -o hp2ps-AuxFile.o `test -f 'AuxFile.c' || echo '$(srcdir)/'`AuxFile.c

hp2ps-AuxFile.obj: AuxFile.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -MT hp2ps-AuxFile.obj -MD -MP -MF "$(DEPDIR)/hp2ps-AuxFile.Tpo" -c -o hp2ps-AuxFile.obj `if test -f 'AuxFile.c'; then $(CYGPATH_W) 'AuxFile.c'; else $(CYGPATH_W) '$(srcdir)/AuxFile.c'; fi`; \
	then mv -f "$(DEPDIR)/hp2ps-AuxFile.Tpo" "$(DEPDIR)/hp2ps-AuxFile.Po"; else rm -f "$(DEPDIR)/hp2ps-AuxFile.Tpo"; exit 1; fi
#	source='AuxFile.c' object='hp2ps-AuxFile.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -c -o hp2ps-AuxFile.obj `if test -f 'AuxFile.c'; then $(CYGPATH_W) 'AuxFile.c'; else $(CYGPATH_W) '$(srcdir)/AuxFile.c'; fi`

hp2ps-Axes.o: Axes.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -MT hp2ps-Axes.o -MD -MP -MF "$(DEPDIR)/hp2ps-Axes.Tpo" -c -o hp2ps-Axes.o `test -f 'Axes.c' || echo '$(srcdir)/'`Axes.c; \
	then mv -f "$(DEPDIR)/hp2ps-Axes.Tpo" "$(DEPDIR)/hp2ps-Axes.Po"; else rm -f "$(DEPDIR)/hp2ps-Axes.Tpo"; exit 1; fi
#	source='Axes.c' object='hp2ps-Axes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -c -o hp2ps-Axes.o `test -f 'Axes.c' || echo '$(srcdir)/'`Axes.c

hp2ps-Axes.obj: Axes.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -MT hp2ps-Axes.obj -MD -MP -MF "$(DEPDIR)/hp2ps-Axes.Tpo" -c -o hp2ps-Axes.obj `if test -f 'Axes.c'; then $(CYGPATH_W) 'Axes.c'; else $(CYGPATH_W) '$(srcdir)/Axes.c'; fi`; \
	then mv -f "$(DEPDIR)/hp2ps-Axes.Tpo" "$(DEPDIR)/hp2ps-Axes.Po"; else rm -f "$(DEPDIR)/hp2ps-Axes.Tpo"; exit 1; fi
#	source='Axes.c' object='hp2ps-Axes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -c -o hp2ps-Axes.obj `if test -f 'Axes.c'; then $(CYGPATH_W) 'Axes.c'; else $(CYGPATH_W) '$(srcdir)/Axes.c'; fi`

hp2ps-AreaBelow.o: AreaBelow.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -MT hp2ps-AreaBelow.o -MD -MP -MF "$(DEPDIR)/hp2ps-AreaBelow.Tpo" -c -o hp2ps-AreaBelow.o `test -f 'AreaBelow.c' || echo '$(srcdir)/'`AreaBelow.c; \
	then mv -f "$(DEPDIR)/hp2ps-AreaBelow.Tpo" "$(DEPDIR)/hp2ps-AreaBelow.Po"; else rm -f "$(DEPDIR)/hp2ps-AreaBelow.Tpo"; exit 1; fi
#	source='AreaBelow.c' object='hp2ps-AreaBelow.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -c -o hp2ps-AreaBelow.o `test -f 'AreaBelow.c' || echo '$(srcdir)/'`AreaBelow.c

hp2ps-AreaBelow.obj: AreaBelow.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -MT hp2ps-AreaBelow.obj -MD -MP -MF "$(DEPDIR)/hp2ps-AreaBelow.Tpo" -c -o hp2ps-AreaBelow.obj `if test -f 'AreaBelow.c'; then $(CYGPATH_W) 'AreaBelow.c'; else $(CYGPATH_W) '$(srcdir)/AreaBelow.c'; fi`; \
	then mv -f "$(DEPDIR)/hp2ps-AreaBelow.Tpo" "$(DEPDIR)/hp2ps-AreaBelow.Po"; else rm -f "$(DEPDIR)/hp2ps-AreaBelow.Tpo"; exit 1; fi
#	source='AreaBelow.c' object='hp2ps-AreaBelow.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -c -o hp2ps-AreaBelow.obj `if test -f 'AreaBelow.c'; then $(CYGPATH_W) 'AreaBelow.c'; else $(CYGPATH_W) '$(srcdir)/AreaBelow.c'; fi`

hp2ps-Curves.o: Curves.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -MT hp2ps-Curves.o -MD -MP -MF "$(DEPDIR)/hp2ps-Curves.Tpo" -c -o hp2ps-Curves.o `test -f 'Curves.c' || echo '$(srcdir)/'`Curves.c; \
	then mv -f "$(DEPDIR)/hp2ps-Curves.Tpo" "$(DEPDIR)/hp2ps-Curves.Po"; else rm -f "$(DEPDIR)/hp2ps-Curves.Tpo"; exit 1; fi
#	source='Curves.c' object='hp2ps-Curves.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -c -o hp2ps-Curves.o `test -f 'Curves.c' || echo '$(srcdir)/'`Curves.c

hp2ps-Curves.obj: Curves.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -MT hp2ps-Curves.obj -MD -MP -MF "$(DEPDIR)/hp2ps-Curves.Tpo" -c -o hp2ps-Curves.obj `if test -f 'Curves.c'; then $(CYGPATH_W) 'Curves.c'; else $(CYGPATH_W) '$(srcdir)/Curves.c'; fi`; \
	then mv -f "$(DEPDIR)/hp2ps-Curves.Tpo" "$(DEPDIR)/hp2ps-Curves.Po"; else rm -f "$(DEPDIR)/hp2ps-Curves.Tpo"; exit 1; fi
#	source='Curves.c' object='hp2ps-Curves.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -c -o hp2ps-Curves.obj `if test -f 'Curves.c'; then $(CYGPATH_W) 'Curves.c'; else $(CYGPATH_W) '$(srcdir)/Curves.c'; fi`

hp2ps-Deviation.o: Deviation.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -MT hp2ps-Deviation.o -MD -MP -MF "$(DEPDIR)/hp2ps-Deviation.Tpo" -c -o hp2ps-Deviation.o `test -f 'Deviation.c' || echo '$(srcdir)/'`Deviation.c; \
	then mv -f "$(DEPDIR)/hp2ps-Deviation.Tpo" "$(DEPDIR)/hp2ps-Deviation.Po"; else rm -f "$(DEPDIR)/hp2ps-Deviation.Tpo"; exit 1; fi
#	source='Deviation.c' object='hp2ps-Deviation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -c -o hp2ps-Deviation.o `test -f 'Deviation.c' || echo '$(srcdir)/'`Deviation.c

hp2ps-Deviation.obj: Deviation.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -MT hp2ps-Deviation.obj -MD -MP -MF "$(DEPDIR)/hp2ps-Deviation.Tpo" -c -o hp2ps-Deviation.obj `if test -f 'Deviation.c'; then $(CYGPATH_W) 'Deviation.c'; else $(CYGPATH_W) '$(srcdir)/Deviation.c'; fi`; \
	then mv -f "$(DEPDIR)/hp2ps-Deviation.Tpo" "$(DEPDIR)/hp2ps-Deviation.Po"; else rm -f "$(DEPDIR)/hp2ps-Deviation.Tpo"; exit 1; fi
#	source='Deviation.c' object='hp2ps-Deviation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -c -o hp2ps-Deviation.obj `if test -f 'Deviation.c'; then $(CYGPATH_W) 'Deviation.c'; else $(CYGPATH_W) '$(srcdir)/Deviation.c'; fi`

hp2ps-Dimensions.o: Dimensions.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -MT hp2ps-Dimensions.o -MD -MP -MF "$(DEPDIR)/hp2ps-Dimensions.Tpo" -c -o hp2ps-Dimensions.o `test -f 'Dimensions.c' || echo '$(srcdir)/'`Dimensions.c; \
	then mv -f "$(DEPDIR)/hp2ps-Dimensions.Tpo" "$(DEPDIR)/hp2ps-Dimensions.Po"; else rm -f "$(DEPDIR)/hp2ps-Dimensions.Tpo"; exit 1; fi
#	source='Dimensions.c' object='hp2ps-Dimensions.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -c -o hp2ps-Dimensions.o `test -f 'Dimensions.c' || echo '$(srcdir)/'`Dimensions.c

hp2ps-Dimensions.obj: Dimensions.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -MT hp2ps-Dimensions.obj -MD -MP -MF "$(DEPDIR)/hp2ps-Dimensions.Tpo" -c -o hp2ps-Dimensions.obj `if test -f 'Dimensions.c'; then $(CYGPATH_W) 'Dimensions.c'; else $(CYGPATH_W) '$(srcdir)/Dimensions.c'; fi`; \
	then mv -f "$(DEPDIR)/hp2ps-Dimensions.Tpo" "$(DEPDIR)/hp2ps-Dimensions.Po"; else rm -f "$(DEPDIR)/hp2ps-Dimensions.Tpo"; exit 1; fi
#	source='Dimensions.c' object='hp2ps-Dimensions.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -c -o hp2ps-Dimensions.obj `if test -f 'Dimensions.c'; then $(CYGPATH_W) 'Dimensions.c'; else $(CYGPATH_W) '$(srcdir)/Dimensions.c'; fi`

hp2ps-Error.o: Error.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -MT hp2ps-Error.o -MD -MP -MF "$(DEPDIR)/hp2ps-Error.Tpo" -c -o hp2ps-Error.o `test -f 'Error.c' || echo '$(srcdir)/'`Error.c; \
	then mv -f "$(DEPDIR)/hp2ps-Error.Tpo" "$(DEPDIR)/hp2ps-Error.Po"; else rm -f "$(DEPDIR)/hp2ps-Error.Tpo"; exit 1; fi
#	source='Error.c' object='hp2ps-Error.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -c -o hp2ps-Error.o `test -f 'Error.c' || echo '$(srcdir)/'`Error.c

hp2ps-Error.obj: Error.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -MT hp2ps-Error.obj -MD -MP -MF "$(DEPDIR)/hp2ps-Error.Tpo" -c -o hp2ps-Error.obj `if test -f 'Error.c'; then $(CYGPATH_W) 'Error.c'; else $(CYGPATH_W) '$(srcdir)/Error.c'; fi`; \
	then mv -f "$(DEPDIR)/hp2ps-Error.Tpo" "$(DEPDIR)/hp2ps-Error.Po"; else rm -f "$(DEPDIR)/hp2ps-Error.Tpo"; exit 1; fi
#	source='Error.c' object='hp2ps-Error.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -c -o hp2ps-Error.obj `if test -f 'Error.c'; then $(CYGPATH_W) 'Error.c'; else $(CYGPATH_W) '$(srcdir)/Error.c'; fi`

hp2ps-HpFile.o: HpFile.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -MT hp2ps-HpFile.o -MD -MP -MF "$(DEPDIR)/hp2ps-HpFile.Tpo" -c -o hp2ps-HpFile.o `test -f 'HpFile.c' || echo '$(srcdir)/'`HpFile.c; \
	then mv -f "$(DEPDIR)/hp2ps-HpFile.Tpo" "$(DEPDIR)/hp2ps-HpFile.Po"; else rm -f "$(DEPDIR)/hp2ps-HpFile.Tpo"; exit 1; fi
#	source='HpFile.c' object='hp2ps-HpFile.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -c -o hp2ps-HpFile.o `test -f 'HpFile.c' || echo '$(srcdir)/'`HpFile.c

hp2ps-HpFile.obj: HpFile.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -MT hp2ps-HpFile.obj -MD -MP -MF "$(DEPDIR)/hp2ps-HpFile.Tpo" -c -o hp2ps-HpFile.obj `if test -f 'HpFile.c'; then $(CYGPATH_W) 'HpFile.c'; else $(CYGPATH_W) '$(srcdir)/HpFile.c'; fi`; \
	then mv -f "$(DEPDIR)/hp2ps-HpFile.Tpo" "$(DEPDIR)/hp2ps-HpFile.Po"; else rm -f "$(DEPDIR)/hp2ps-HpFile.Tpo"; exit 1; fi
#	source='HpFile.c' object='hp2ps-HpFile.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -c -o hp2ps-HpFile.obj `if test -f 'HpFile.c'; then $(CYGPATH_W) 'HpFile.c'; else $(CYGPATH_W) '$(srcdir)/HpFile.c'; fi`

hp2ps-Key.o: Key.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -MT hp2ps-Key.o -MD -MP -MF "$(DEPDIR)/hp2ps-Key.Tpo" -c -o hp2ps-Key.o `test -f 'Key.c' || echo '$(srcdir)/'`Key.c; \
	then mv -f "$(DEPDIR)/hp2ps-Key.Tpo" "$(DEPDIR)/hp2ps-Key.Po"; else rm -f "$(DEPDIR)/hp2ps-Key.Tpo"; exit 1; fi
#	source='Key.c' object='hp2ps-Key.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -c -o hp2ps-Key.o `test -f 'Key.c' || echo '$(srcdir)/'`Key.c

hp2ps-Key.obj: Key.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -MT hp2ps-Key.obj -MD -MP -MF "$(DEPDIR)/hp2ps-Key.Tpo" -c -o hp2ps-Key.obj `if test -f 'Key.c'; then $(CYGPATH_W) 'Key.c'; else $(CYGPATH_W) '$(srcdir)/Key.c'; fi`; \
	then mv -f "$(DEPDIR)/hp2ps-Key.Tpo" "$(DEPDIR)/hp2ps-Key.Po"; else rm -f "$(DEPDIR)/hp2ps-Key.Tpo"; exit 1; fi
#	source='Key.c' object='hp2ps-Key.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -c -o hp2ps-Key.obj `if test -f 'Key.c'; then $(CYGPATH_W) 'Key.c'; else $(CYGPATH_W) '$(srcdir)/Key.c'; fi`

hp2ps-Main.o: Main.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -MT hp2ps-Main.o -MD -MP -MF "$(DEPDIR)/hp2ps-Main.Tpo" -c -o hp2ps-Main.o `test -f 'Main.c' || echo '$(srcdir)/'`Main.c; \
	then mv -f "$(DEPDIR)/hp2ps-Main.Tpo" "$(DEPDIR)/hp2ps-Main.Po"; else rm -f "$(DEPDIR)/hp2ps-Main.Tpo"; exit 1; fi
#	source='Main.c' object='hp2ps-Main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -c -o hp2ps-Main.o `test -f 'Main.c' || echo '$(srcdir)/'`Main.c

hp2ps-Main.obj: Main.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -MT hp2ps-Main.obj -MD -MP -MF "$(DEPDIR)/hp2ps-Main.Tpo" -c -o hp2ps-Main.obj `if test -f 'Main.c'; then $(CYGPATH_W) 'Main.c'; else $(CYGPATH_W) '$(srcdir)/Main.c'; fi`; \
	then mv -f "$(DEPDIR)/hp2ps-Main.Tpo" "$(DEPDIR)/hp2ps-Main.Po"; else rm -f "$(DEPDIR)/hp2ps-Main.Tpo"; exit 1; fi
#	source='Main.c' object='hp2ps-Main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -c -o hp2ps-Main.obj `if test -f 'Main.c'; then $(CYGPATH_W) 'Main.c'; else $(CYGPATH_W) '$(srcdir)/Main.c'; fi`

hp2ps-Marks.o: Marks.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -MT hp2ps-Marks.o -MD -MP -MF "$(DEPDIR)/hp2ps-Marks.Tpo" -c -o hp2ps-Marks.o `test -f 'Marks.c' || echo '$(srcdir)/'`Marks.c; \
	then mv -f "$(DEPDIR)/hp2ps-Marks.Tpo" "$(DEPDIR)/hp2ps-Marks.Po"; else rm -f "$(DEPDIR)/hp2ps-Marks.Tpo"; exit 1; fi
#	source='Marks.c' object='hp2ps-Marks.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -c -o hp2ps-Marks.o `test -f 'Marks.c' || echo '$(srcdir)/'`Marks.c

hp2ps-Marks.obj: Marks.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -MT hp2ps-Marks.obj -MD -MP -MF "$(DEPDIR)/hp2ps-Marks.Tpo" -c -o hp2ps-Marks.obj `if test -f 'Marks.c'; then $(CYGPATH_W) 'Marks.c'; else $(CYGPATH_W) '$(srcdir)/Marks.c'; fi`; \
	then mv -f "$(DEPDIR)/hp2ps-Marks.Tpo" "$(DEPDIR)/hp2ps-Marks.Po"; else rm -f "$(DEPDIR)/hp2ps-Marks.Tpo"; exit 1; fi
#	source='Marks.c' object='hp2ps-Marks.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -c -o hp2ps-Marks.obj `if test -f 'Marks.c'; then $(CYGPATH_W) 'Marks.c'; else $(CYGPATH_W) '$(srcdir)/Marks.c'; fi`

hp2ps-TopTwenty.o: TopTwenty.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -MT hp2ps-TopTwenty.o -MD -MP -MF "$(DEPDIR)/hp2ps-TopTwenty.Tpo" -c -o hp2ps-TopTwenty.o `test -f 'TopTwenty.c' || echo '$(srcdir)/'`TopTwenty.c; \
	then mv -f "$(DEPDIR)/hp2ps-TopTwenty.Tpo" "$(DEPDIR)/hp2ps-TopTwenty.Po"; else rm -f "$(DEPDIR)/hp2ps-TopTwenty.Tpo"; exit 1; fi
#	source='TopTwenty.c' object='hp2ps-TopTwenty.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -c -o hp2ps-TopTwenty.o `test -f 'TopTwenty.c' || echo '$(srcdir)/'`TopTwenty.c

hp2ps-TopTwenty.obj: TopTwenty.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -MT hp2ps-TopTwenty.obj -MD -MP -MF "$(DEPDIR)/hp2ps-TopTwenty.Tpo" -c -o hp2ps-TopTwenty.obj `if test -f 'TopTwenty.c'; then $(CYGPATH_W) 'TopTwenty.c'; else $(CYGPATH_W) '$(srcdir)/TopTwenty.c'; fi`; \
	then mv -f "$(DEPDIR)/hp2ps-TopTwenty.Tpo" "$(DEPDIR)/hp2ps-TopTwenty.Po"; else rm -f "$(DEPDIR)/hp2ps-TopTwenty.Tpo"; exit 1; fi
#	source='TopTwenty.c' object='hp2ps-TopTwenty.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -c -o hp2ps-TopTwenty.obj `if test -f 'TopTwenty.c'; then $(CYGPATH_W) 'TopTwenty.c'; else $(CYGPATH_W) '$(srcdir)/TopTwenty.c'; fi`

hp2ps-TraceElement.o: TraceElement.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -MT hp2ps-TraceElement.o -MD -MP -MF "$(DEPDIR)/hp2ps-TraceElement.Tpo" -c -o hp2ps-TraceElement.o `test -f 'TraceElement.c' || echo '$(srcdir)/'`TraceElement.c; \
	then mv -f "$(DEPDIR)/hp2ps-TraceElement.Tpo" "$(DEPDIR)/hp2ps-TraceElement.Po"; else rm -f "$(DEPDIR)/hp2ps-TraceElement.Tpo"; exit 1; fi
#	source='TraceElement.c' object='hp2ps-TraceElement.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -c -o hp2ps-TraceElement.o `test -f 'TraceElement.c' || echo '$(srcdir)/'`TraceElement.c

hp2ps-TraceElement.obj: TraceElement.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -MT hp2ps-TraceElement.obj -MD -MP -MF "$(DEPDIR)/hp2ps-TraceElement.Tpo" -c -o hp2ps-TraceElement.obj `if test -f 'TraceElement.c'; then $(CYGPATH_W) 'TraceElement.c'; else $(CYGPATH_W) '$(srcdir)/TraceElement.c'; fi`; \
	then mv -f "$(DEPDIR)/hp2ps-TraceElement.Tpo" "$(DEPDIR)/hp2ps-TraceElement.Po"; else rm -f "$(DEPDIR)/hp2ps-TraceElement.Tpo"; exit 1; fi
#	source='TraceElement.c' object='hp2ps-TraceElement.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -c -o hp2ps-TraceElement.obj `if test -f 'TraceElement.c'; then $(CYGPATH_W) 'TraceElement.c'; else $(CYGPATH_W) '$(srcdir)/TraceElement.c'; fi`

hp2ps-PsFile.o: PsFile.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -MT hp2ps-PsFile.o -MD -MP -MF "$(DEPDIR)/hp2ps-PsFile.Tpo" -c -o hp2ps-PsFile.o `test -f 'PsFile.c' || echo '$(srcdir)/'`PsFile.c; \
	then mv -f "$(DEPDIR)/hp2ps-PsFile.Tpo" "$(DEPDIR)/hp2ps-PsFile.Po"; else rm -f "$(DEPDIR)/hp2ps-PsFile.Tpo"; exit 1; fi
#	source='PsFile.c' object='hp2ps-PsFile.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -c -o hp2ps-PsFile.o `test -f 'PsFile.c' || echo '$(srcdir)/'`PsFile.c

hp2ps-PsFile.obj: PsFile.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -MT hp2ps-PsFile.obj -MD -MP -MF "$(DEPDIR)/hp2ps-PsFile.Tpo" -c -o hp2ps-PsFile.obj `if test -f 'PsFile.c'; then $(CYGPATH_W) 'PsFile.c'; else $(CYGPATH_W) '$(srcdir)/PsFile.c'; fi`; \
	then mv -f "$(DEPDIR)/hp2ps-PsFile.Tpo" "$(DEPDIR)/hp2ps-PsFile.Po"; else rm -f "$(DEPDIR)/hp2ps-PsFile.Tpo"; exit 1; fi
#	source='PsFile.c' object='hp2ps-PsFile.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -c -o hp2ps-PsFile.obj `if test -f 'PsFile.c'; then $(CYGPATH_W) 'PsFile.c'; else $(CYGPATH_W) '$(srcdir)/PsFile.c'; fi`

hp2ps-Reorder.o: Reorder.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -MT hp2ps-Reorder.o -MD -MP -MF "$(DEPDIR)/hp2ps-Reorder.Tpo" -c -o hp2ps-Reorder.o `test -f 'Reorder.c' || echo '$(srcdir)/'`Reorder.c; \
	then mv -f "$(DEPDIR)/hp2ps-Reorder.Tpo" "$(DEPDIR)/hp2ps-Reorder.Po"; else rm -f "$(DEPDIR)/hp2ps-Reorder.Tpo"; exit 1; fi
#	source='Reorder.c' object='hp2ps-Reorder.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -c -o hp2ps-Reorder.o `test -f 'Reorder.c' || echo '$(srcdir)/'`Reorder.c

hp2ps-Reorder.obj: Reorder.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -MT hp2ps-Reorder.obj -MD -MP -MF "$(DEPDIR)/hp2ps-Reorder.Tpo" -c -o hp2ps-Reorder.obj `if test -f 'Reorder.c'; then $(CYGPATH_W) 'Reorder.c'; else $(CYGPATH_W) '$(srcdir)/Reorder.c'; fi`; \
	then mv -f "$(DEPDIR)/hp2ps-Reorder.Tpo" "$(DEPDIR)/hp2ps-Reorder.Po"; else rm -f "$(DEPDIR)/hp2ps-Reorder.Tpo"; exit 1; fi
#	source='Reorder.c' object='hp2ps-Reorder.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -c -o hp2ps-Reorder.obj `if test -f 'Reorder.c'; then $(CYGPATH_W) 'Reorder.c'; else $(CYGPATH_W) '$(srcdir)/Reorder.c'; fi`

hp2ps-Scale.o: Scale.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -MT hp2ps-Scale.o -MD -MP -MF "$(DEPDIR)/hp2ps-Scale.Tpo" -c -o hp2ps-Scale.o `test -f 'Scale.c' || echo '$(srcdir)/'`Scale.c; \
	then mv -f "$(DEPDIR)/hp2ps-Scale.Tpo" "$(DEPDIR)/hp2ps-Scale.Po"; else rm -f "$(DEPDIR)/hp2ps-Scale.Tpo"; exit 1; fi
#	source='Scale.c' object='hp2ps-Scale.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -c -o hp2ps-Scale.o `test -f 'Scale.c' || echo '$(srcdir)/'`Scale.c

hp2ps-Scale.obj: Scale.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -MT hp2ps-Scale.obj -MD -MP -MF "$(DEPDIR)/hp2ps-Scale.Tpo" -c -o hp2ps-Scale.obj `if test -f 'Scale.c'; then $(CYGPATH_W) 'Scale.c'; else $(CYGPATH_W) '$(srcdir)/Scale.c'; fi`; \
	then mv -f "$(DEPDIR)/hp2ps-Scale.Tpo" "$(DEPDIR)/hp2ps-Scale.Po"; else rm -f "$(DEPDIR)/hp2ps-Scale.Tpo"; exit 1; fi
#	source='Scale.c' object='hp2ps-Scale.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -c -o hp2ps-Scale.obj `if test -f 'Scale.c'; then $(CYGPATH_W) 'Scale.c'; else $(CYGPATH_W) '$(srcdir)/Scale.c'; fi`

hp2ps-Shade.o: Shade.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -MT hp2ps-Shade.o -MD -MP -MF "$(DEPDIR)/hp2ps-Shade.Tpo" -c -o hp2ps-Shade.o `test -f 'Shade.c' || echo '$(srcdir)/'`Shade.c; \
	then mv -f "$(DEPDIR)/hp2ps-Shade.Tpo" "$(DEPDIR)/hp2ps-Shade.Po"; else rm -f "$(DEPDIR)/hp2ps-Shade.Tpo"; exit 1; fi
#	source='Shade.c' object='hp2ps-Shade.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -c -o hp2ps-Shade.o `test -f 'Shade.c' || echo '$(srcdir)/'`Shade.c

hp2ps-Shade.obj: Shade.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -MT hp2ps-Shade.obj -MD -MP -MF "$(DEPDIR)/hp2ps-Shade.Tpo" -c -o hp2ps-Shade.obj `if test -f 'Shade.c'; then $(CYGPATH_W) 'Shade.c'; else $(CYGPATH_W) '$(srcdir)/Shade.c'; fi`; \
	then mv -f "$(DEPDIR)/hp2ps-Shade.Tpo" "$(DEPDIR)/hp2ps-Shade.Po"; else rm -f "$(DEPDIR)/hp2ps-Shade.Tpo"; exit 1; fi
#	source='Shade.c' object='hp2ps-Shade.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -c -o hp2ps-Shade.obj `if test -f 'Shade.c'; then $(CYGPATH_W) 'Shade.c'; else $(CYGPATH_W) '$(srcdir)/Shade.c'; fi`

hp2ps-Utilities.o: Utilities.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -MT hp2ps-Utilities.o -MD -MP -MF "$(DEPDIR)/hp2ps-Utilities.Tpo" -c -o hp2ps-Utilities.o `test -f 'Utilities.c' || echo '$(srcdir)/'`Utilities.c; \
	then mv -f "$(DEPDIR)/hp2ps-Utilities.Tpo" "$(DEPDIR)/hp2ps-Utilities.Po"; else rm -f "$(DEPDIR)/hp2ps-Utilities.Tpo"; exit 1; fi
#	source='Utilities.c' object='hp2ps-Utilities.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -c -o hp2ps-Utilities.o `test -f 'Utilities.c' || echo '$(srcdir)/'`Utilities.c

hp2ps-Utilities.obj: Utilities.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -MT hp2ps-Utilities.obj -MD -MP -MF "$(DEPDIR)/hp2ps-Utilities.Tpo" -c -o hp2ps-Utilities.obj `if test -f 'Utilities.c'; then $(CYGPATH_W) 'Utilities.c'; else $(CYGPATH_W) '$(srcdir)/Utilities.c'; fi`; \
	then mv -f "$(DEPDIR)/hp2ps-Utilities.Tpo" "$(DEPDIR)/hp2ps-Utilities.Po"; else rm -f "$(DEPDIR)/hp2ps-Utilities.Tpo"; exit 1; fi
#	source='Utilities.c' object='hp2ps-Utilities.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hp2ps_CPPFLAGS) $(CPPFLAGS) $(hp2ps_CFLAGS) $(CFLAGS) -c -o hp2ps-Utilities.obj `if test -f 'Utilities.c'; then $(CYGPATH_W) 'Utilities.c'; else $(CYGPATH_W) '$(srcdir)/Utilities.c'; fi`
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/../..
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(HEADERS) all-local
installdirs:
	for dir in "$(DESTDIR)$(valdir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-valPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-valPROGRAMS

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am uninstall-valPROGRAMS

.PHONY: CTAGS GTAGS all all-am all-local check check-am clean \
	clean-generic clean-valPROGRAMS ctags distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-man install-strip \
	install-valPROGRAMS installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-info-am \
	uninstall-valPROGRAMS


# The kludge that passes for vex's build system can't handle parallel
# builds.  So, for the time being, serialise all Valgrind building.
# (this is equivalent to enforcing "make -j 1".
.NOTPARALLEL:

all-local:
	mkdir -p $(inplacedir)
	-rm -f $(addprefix $(inplacedir)/,$(val_PROGRAMS))
	ln -f -s $(addprefix ../$(subdir)/,$(val_PROGRAMS)) $(inplacedir)
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
